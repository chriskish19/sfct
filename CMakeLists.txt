# Set the minimum required version of CMake to be 3.13
cmake_minimum_required(VERSION 3.13 FATAL_ERROR)

# Create a project named sfct
project(sfct VERSION 1.0.0.1)

# Set the variable CMAKE_CXX_STANDARD to c++20
# and the variable CMAKE_CXX_STANDARD_REQUIRED to True
set(CMAKE_CXX_STANDARD 20)
set(CMAKE_CXX_STANDARD_REQUIRED true)



# makes for simple include paths in headers
include_directories(src/logger)
include_directories(src/opengl)


# Add the source files here
set(SOURCE_FILES    src/app/main.cpp
                    src/app/TM.cpp
                    src/logger/Logger.cpp
                    src/app/FileParse.cpp
                    src/app/DirectorySignal.cpp
                    src/app/ConsoleTM.cpp
                    src/app/ConsoleApp.cpp
                    src/app/benchmark.cpp
                    src/app/sfct_api.hpp
                    src/app/sfct_api.cpp
                    src/app/timer.cpp
                    src/app/directory_copy.cpp)


add_executable(${PROJECT_NAME} ${SOURCE_FILES})

# OpenGL package is required
find_package(OpenGL REQUIRED)

# Include directories for GLEW and GLFW using target_include_directories
target_include_directories(${PROJECT_NAME} PRIVATE
    ${CMAKE_SOURCE_DIR}/src/opengl/glew
    ${CMAKE_SOURCE_DIR}/src/opengl/glfw
)

# Link against GLEW, GLFW, and OpenGL libraries
target_link_libraries(${PROJECT_NAME} PRIVATE
   debug ${CMAKE_SOURCE_DIR}/src/opengl/glew/glew-sharedd.lib # this is x64 debug version
   optimized ${CMAKE_SOURCE_DIR}/src/opengl/glew/glew-shared.lib #this is x64 release version
   
   optimized ${CMAKE_SOURCE_DIR}/src/opengl/glfw/glfw3.lib # this is x64 release version
   debug ${CMAKE_SOURCE_DIR}/src/opengl/glfw/glfw3-d.lib # this is x64 debug version
    OpenGL::GL
)



# Check if the build is for Windows
if(WIN32)
    target_link_options(${PROJECT_NAME} PRIVATE
    $<$<CXX_COMPILER_ID:MSVC>:/SUBSYSTEM:CONSOLE>
    )

    # Define UNICODE for Windows builds
    add_definitions(-DUNICODE -D_UNICODE)

    # link the manifest to the project
    target_sources(${PROJECT_NAME} PRIVATE win32/sfct.exe.manifest)
endif()

# Path to the glew DLL file
set(GLEW_DLL_PATH_DEBUG ${CMAKE_SOURCE_DIR}/src/opengl/glew/glew-sharedd.dll)
set(GLEW_DLL_PATH_RELEASE ${CMAKE_SOURCE_DIR}/src/opengl/glew/glew-shared.dll)

# Post-build command to copy GLEW DLL
add_custom_command(TARGET ${PROJECT_NAME} POST_BUILD
    COMMAND ${CMAKE_COMMAND} -E copy_if_different
    $<$<CONFIG:Debug>:${GLEW_DLL_PATH_DEBUG}>$<$<CONFIG:Release>:${GLEW_DLL_PATH_RELEASE}>
    $<TARGET_FILE_DIR:${PROJECT_NAME}>)